name: CD

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  build-and-publish:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true

    env:
      BUILD_CONFIG: "Release"

    runs-on: ubuntu-latest

    permissions:
      contents: write

    defaults:
      run:
        working-directory: ./src

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: "0"

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: 7.x

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build LeagueToolkit --configuration $BUILD_CONFIG --no-restore

      - name: Run Tests
        run: dotnet test LeagueToolkit.Tests --configuration $BUILD_CONFIG --no-restore --verbosity normal

      - name: Pack
        run: dotnet pack LeagueToolkit -c $BUILD_CONFIG

      - name: Bump version and push tag
        id: create-tag
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          RELEASE_BRANCHES: "main"
          DRY_RUN: true

      #- name: Create Release
      #  uses: ncipollo/release-action@v1
      #  with:
      #    tag: ${{ steps.create-tag.outputs.tag }}
      #
      #- name: Publish to NuGet
      #  if: startsWith(github.ref, 'refs/heads/main')
      #  run: dotnet nuget push LeagueToolkit/bin/$BUILD_CONFIG/*.nupkg --source "https://api.nuget.org/v3/index.json" --api-key ${{secrets.NUGET_API_KEY}}
      #
      #- name: Publish to GitHub packages
      #  if: startsWith(github.ref, 'refs/heads/main')
      #  run: dotnet nuget push LeagueToolkit/bin/$BUILD_CONFIG/*.nupkg --source "github" --api-key ${{secrets.GITHUB_TOKEN}}
